/*
 * Copyright (C) 2017 mayurdivate
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package umac.guava.diff;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import umac.guava.GUAVA;
import umac.guava.MainJFrame;

/**
 *
 * @author mayurdivate
 */
public class DifferentialInputFrame1 extends javax.swing.JFrame {

    /**
     * Creates new form DifferentialInputFrame
     */
    
    public static DifferentialInputFrame1 differentialInputFrame;
    static ArrayList<DifferentialInputFile> dfInputList ;
    public static String projectName = null; 
    
    DefaultTableModel dfModel;
    public DifferentialInputFrame1() {
        initComponents();
        createColumns();
    }
    
    public void createColumns(){
        dfModel = (DefaultTableModel) jTableDiff.getModel();
        dfModel.addColumn("File Name");
        dfModel.addColumn("File Type");
        dfModel.addColumn("Replicate");
        dfModel.addColumn("Condition");
        
        TableColumn conditionCol = jTableDiff.getColumnModel().getColumn(3);
        conditionCol.setCellEditor(new DefaultCellEditor(getConditionComboBox()));

        TableColumn replicateCol = jTableDiff.getColumnModel().getColumn(2);
        replicateCol.setCellEditor(new DefaultCellEditor(getReplicateComboBox()));
        
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanelWelcome = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelProjectName = new javax.swing.JLabel();
        jTextFieldProjectName = new javax.swing.JTextField();
        jPanelDataTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDiff = new javax.swing.JTable();
        jPanelDFACinput = new javax.swing.JPanel();
        jButtonRemoveFile = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jButtonAddFile = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuTools = new javax.swing.JMenu();
        jMenuItemGUAVA = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemQuit = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LOAD DATA");
        setName("LOAD DATA"); // NOI18N
        setResizable(false);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("welcome to differential analysis tool, select input bam and bed file files");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabelProjectName.setText("Project Name");

        jTextFieldProjectName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldProjectNameKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelWelcomeLayout = new javax.swing.GroupLayout(jPanelWelcome);
        jPanelWelcome.setLayout(jPanelWelcomeLayout);
        jPanelWelcomeLayout.setHorizontalGroup(
            jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWelcomeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWelcomeLayout.createSequentialGroup()
                        .addComponent(jLabelProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        jPanelWelcomeLayout.setVerticalGroup(
            jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWelcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jTableDiff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTableDiff.setFont(new java.awt.Font("Andale Mono", 0, 14)); // NOI18N
        jTableDiff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {
            public boolean isCellEditable(int row, int column){
                if(column < 1){
                    return false;
                }
                return true;
            }
        }
    );
    jTableDiff.setRowHeight(20);
    jTableDiff.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jTableDiff.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(jTableDiff);

    javax.swing.GroupLayout jPanelDataTableLayout = new javax.swing.GroupLayout(jPanelDataTable);
    jPanelDataTable.setLayout(jPanelDataTableLayout);
    jPanelDataTableLayout.setHorizontalGroup(
        jPanelDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelDataTableLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanelDataTableLayout.setVerticalGroup(
        jPanelDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelDataTableLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
            .addContainerGap())
    );

    jButtonRemoveFile.setText("Remove");
    jButtonRemoveFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonRemoveFileActionPerformed(evt);
        }
    });

    jButtonNext.setText("Next");
    jButtonNext.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonNextActionPerformed(evt);
        }
    });

    jButtonReset.setText("Reset All");
    jButtonReset.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonResetActionPerformed(evt);
        }
    });

    jButtonAddFile.setText("Add File");
    jButtonAddFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonAddFileActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelDFACinputLayout = new javax.swing.GroupLayout(jPanelDFACinput);
    jPanelDFACinput.setLayout(jPanelDFACinputLayout);
    jPanelDFACinputLayout.setHorizontalGroup(
        jPanelDFACinputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelDFACinputLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonRemoveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(10, 10, 10))
    );
    jPanelDFACinputLayout.setVerticalGroup(
        jPanelDFACinputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelDFACinputLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelDFACinputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButtonRemoveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButtonAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(10, 10, 10))
    );

    jMenuTools.setText("Tools");

    jMenuItemGUAVA.setText("GUAVA");
    jMenuItemGUAVA.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItemGUAVAActionPerformed(evt);
        }
    });
    jMenuTools.add(jMenuItemGUAVA);

    jMenuItem2.setText("Differential Analysis");
    jMenuItem2.setEnabled(false);
    jMenuTools.add(jMenuItem2);
    jMenuTools.add(jSeparator1);

    jMenuItemQuit.setText("Quit");
    jMenuItemQuit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItemQuitActionPerformed(evt);
        }
    });
    jMenuTools.add(jMenuItemQuit);

    jMenuBar1.add(jMenuTools);

    jMenu1.setText("About");
    jMenuBar1.add(jMenu1);

    jMenu2.setText("Help");
    jMenuBar1.add(jMenu2);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanelDataTable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelDFACinput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGap(5, 5, 5))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(5, 5, 5)
            .addComponent(jPanelDataTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(5, 5, 5)
            .addComponent(jPanelDFACinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(10, 10, 10))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        // TODO add your handling code here:
        
       ((DefaultTableModel) jTableDiff.getModel()).setRowCount(0);
        
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddFileActionPerformed
        
            JFileChooser addFileChooser = new JFileChooser();
            addFileChooser.setAcceptAllFileFilterUsed(false);
            FileNameExtensionFilter fileNameExtensionFilter = new FileNameExtensionFilter("*.bam,*.bed,*.narrowPeak", "bam","bed","narrowPeak");
            addFileChooser.addChoosableFileFilter(fileNameExtensionFilter);
            addFileChooser.setDialogTitle("Select BAM/BED file");
        
            if(lastPath != null){
                addFileChooser.setCurrentDirectory(lastPath);
            }        
        
            int returnVal = addFileChooser.showOpenDialog(null);
            if(returnVal == JFileChooser.APPROVE_OPTION){
                File file = addFileChooser.getSelectedFile();
                String fileName = file.getAbsolutePath();
                String type =  fileName.replaceAll(".*\\.", "");
                DifferentialInputFile differentialInput = new DifferentialInputFile(file, type, "I", "Control");
                addBamBedFile(differentialInput);
                lastPath = file.getParentFile();
            }
        
    }//GEN-LAST:event_jButtonAddFileActionPerformed

    public boolean addBamBedFile(DifferentialInputFile differentialInput){
        if(!differentialInput.getDiifInputFile().isDirectory()){
            Object[] rowData = {differentialInput,differentialInput.getType(),
                                differentialInput.getReplicateNumber(),differentialInput.getCondition()};
            dfModel.addRow(rowData);
        }
       return false;
    }
    
    
    
    private void jButtonRemoveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveFileActionPerformed
        
        if(jTableDiff.getSelectedRow() > -1 ){
            int rowNumber =  jTableDiff.getSelectedRow();
            dfModel.removeRow(rowNumber);
        }
        
    }//GEN-LAST:event_jButtonRemoveFileActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        
        boolean flag = true;
        
        
        // Check project name 
        if(!isProjectName()){
            jLabelProjectName.setForeground(Color.red);
            String message = "Project name cannot be empty";
            JOptionPane.showMessageDialog(null, message);
            flag = false;
        }
        
                // total rows
        int rows =  dfModel.getRowCount();

        if(flag && rows >= 4){
            DifferentialInputFrame1.dfInputList =  new ArrayList<>();

            for(int i=0; rows > i; i++){
                Object obj = jTableDiff.getValueAt(i, 0);
                if(obj instanceof DifferentialInputFile){
                    DifferentialInputFile dfInput =  (DifferentialInputFile) obj;
                    dfInput.setReplicateNumber(jTableDiff.getValueAt(i, 2).toString());
                    dfInput.setCondition(jTableDiff.getValueAt(i, 3).toString());
                    DifferentialInputFrame1.dfInputList.add(dfInput);
                }
            }
        }
        else if(flag) {
            JOptionPane.showMessageDialog(null, "Please add both control and treatment files to proceed further");
            flag = false;
        }
        
        
       if(flag){
            DifferentialInputFrame2 paramters = new DifferentialInputFrame2();
            paramters.setVisible(true);
            differentialInputFrame.setVisible(false);
       }
       
    }//GEN-LAST:event_jButtonNextActionPerformed

    private boolean isProjectName(){

        String  projetctName =  jTextFieldProjectName.getText();
        if(projetctName != null && !projetctName.equals("")){
            DifferentialInputFrame1.projectName =  projetctName;
            return true;
        }
        else{
            System.out.println(projetctName);
        }
        return false;
    }
    
    private void jMenuItemGUAVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGUAVAActionPerformed
        // TODO add your handling code here:
        this.dispose();
        MainJFrame mainFrame = new MainJFrame();
        mainFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItemGUAVAActionPerformed

    private void jMenuItemQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItemQuitActionPerformed

    private void jTextFieldProjectNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProjectNameKeyTyped
        // TODO add your handling code here:
        jLabelProjectName.setForeground(Color.black);
        char key = evt.getKeyChar();
        if(Character.isSpaceChar(key)){
            evt.consume();
            
        }
    }//GEN-LAST:event_jTextFieldProjectNameKeyTyped
        
    public JComboBox getReplicateComboBox(){
        String[] values = {"I","II", "III","IV"};
        JComboBox comboBox =  new JComboBox<String>(values);

        comboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent itemEvent) {
                if(itemEvent.getStateChange() == ItemEvent.SELECTED){
                    comboBox.setSelectedItem(itemEvent.getItem());
                }
            }
        });
        return comboBox;
    }
    
    public JComboBox getConditionComboBox(){
        String[] values = {"Control", "Treatment"};
        JComboBox comboBox =  new JComboBox<String>(values);
        comboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent itemEvent) {
                if (itemEvent.getStateChange() == ItemEvent.SELECTED) {
                    comboBox.setSelectedItem(itemEvent.getItem());
                }
            }
        });
        return comboBox;
    }
    
    
    static File lastPath = new File(GUAVA.getPwd());
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddFile;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonRemoveFile;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelProjectName;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemGUAVA;
    private javax.swing.JMenuItem jMenuItemQuit;
    private javax.swing.JMenu jMenuTools;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelDFACinput;
    private javax.swing.JPanel jPanelDataTable;
    private javax.swing.JPanel jPanelWelcome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTableDiff;
    private javax.swing.JTextField jTextFieldProjectName;
    // End of variables declaration//GEN-END:variables
}
